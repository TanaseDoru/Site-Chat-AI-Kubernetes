]633;E;for file in *;f318574a-900f-4bdc-86db-fa1bb984b101]633;C===== README.md =====
# Site-Chat-AI-Kubernetes
## Description
This project focuses on creating a site with a public chat accesed by everyone and an AI tool using automatic develeopment with Kuberentes

# Sistem de fisiere
- chat-site: Director cu componentele pentru site-ul de chat

# Tehnologii folosite
- **npm** -> packet manager
- Aplicatie chat:
    - Frontend: **vue**
    - Backend: **maven, openjdk17, springBoot**
    - Baza de date: **MongoDB**
- Aplicatie IA: 
    - To be continued...


# Tutorial instalare
De rulat script-ul /chat-site/deploy.sh


## TO DO:
- [ ] CMS 
- [ ] Parte AI



===== deploy.sh =====
# 1. Aplici namespace (dacÄƒ nu existÄƒ deja)
microk8s kubectl apply -f k8s/namespace.yaml

# 2. ClusterIP services + deployments (backend, frontend, mongodb)
microk8s kubectl apply -n chat-system -f k8s/mongodb-deployment.yaml \
                                            -f k8s/mongodb-service.yaml \
                                            -f k8s/backend-deployment.yaml \
                                            -f k8s/backend-service.yaml \
                                            -f k8s/frontend-deployment.yaml \
                                            -f k8s/frontend-service.yaml \
                                            -f k8s/vveb-deployment.yaml 

# 3. Ingress (expune tot pe 80)
microk8s kubectl apply -n chat-system -f k8s/ingress.yaml

# 4. AÈ™teaptÄƒ
microk8s kubectl get all -n chat-system
microk8s kubectl get ingress -n chat-system

===== file.txt =====

