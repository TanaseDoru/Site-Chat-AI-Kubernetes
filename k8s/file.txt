]633;E;for file in *;492b113d-fac7-466c-b85d-0fe14eba9110]633;C===== ai-backend.yaml =====
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-backend
  template:
    metadata:
      labels:
        app: ai-backend
    spec:
      containers:
      - name: ai-backend
        image: tanase0/ai-service-backend:latest
        ports:
        - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: ai-backend-service
spec:
  selector:
    app: ai-backend
  ports:
  - port: 8000
    targetPort: 8000
  type: ClusterIP
===== ai-frontend.yaml =====
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-frontend
  labels:
    app: ai-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-frontend
  template:
    metadata:
      labels:
        app: ai-frontend
    spec:
      containers:
      - name: ai-frontend
        image: tanase0/ai-service-frontend:latest
        ports:
        - containerPort: 70
          hostPort: 70
        env:
        - name: VITE_API_URL
          value: "http://ai-backend-service:8000"
---
apiVersion: v1
kind: Service
metadata:
  name: ai-frontend-service
spec:
  selector:
    app: ai-frontend
  ports:
  - port: 70
    targetPort: 70
  type: ClusterIP

===== backend-deployment.yaml =====
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-backend
spec:
  replicas: 4
  selector:
    matchLabels:
      app: chat-backend
  template:
    metadata:
      labels:
        app: chat-backend
    spec:
      containers:
      - name: chat-backend-java
        image: tanase0/backend-chat-std:latest
        ports:
        - containerPort: 88
          hostPort: 88
        env:
        - name: MONGO_URI
          value: "mongodb://mongodb-service:27017/chatdb"
===== backend-service.yaml =====
apiVersion: v1
kind: Service
metadata:
  name: chat-backend-service
spec:
  ports:
  # Service listens on port 88
  - port: 88
    # Service targets the containerPort named 'websocket' (which is 88) in the backend pods
    targetPort: websocket 
    protocol: TCP
    name: http-websocket # Naming the port for clarity
  selector:
    # Selects pods with the label 'app: chat-backend'
    app: chat-backend
  # Type ClusterIP is suitable for internal communication via Ingress
  type: ClusterIP


===== cms-pv.yaml =====
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vvveb-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: microk8s-hostpath
  hostPath:
    path: /var/snap/microk8s/common/default-storage/vvveb-pvc
===== cms.yaml =====
---
# Deployment for Vvveb CMS
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vvveb-cms
  labels:
    app: vvveb-cms
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vvveb-cms
  template:
    metadata:
      labels:
        app: vvveb-cms
    spec:
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: vvveb-cms
          image: vvveb/vvvebcms:php8.3-fpm-alpine
          ports:
            - containerPort: 80
          env:
            - name: DB_ENGINE
              value: "sqlite"
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: vvveb-storage
              mountPath: /var/www/html
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "mkdir -p /var/www/html/sessions && chown 1001:1001 /var/www/html/sessions && chmod 755 /var/www/html/sessions && echo 'session.save_path=/var/www/html/sessions' > /usr/local/etc/php/conf.d/custom.ini && echo 'error_reporting = E_ALL & ~E_DEPRECATED & ~E_NOTICE' >> /usr/local/etc/php/conf.d/custom.ini && echo 'session.auto_start=0' >> /usr/local/etc/php/conf.d/custom.ini && echo 'session.use_cookies=1' >> /usr/local/etc/php/conf.d/custom.ini && echo 'session.cookie_lifetime=0' >> /usr/local/etc/php/conf.d/custom.ini"]
      volumes:
        - name: vvveb-storage
          persistentVolumeClaim:
            claimName: vvveb-pvc
---
# PersistentVolumeClaim for SQLite data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vvveb-pvc
spec:
  storageClassName: microk8s-hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Service to expose Vvveb CMS
apiVersion: v1
kind: Service
metadata:
  name: vvveb-service
spec:
  selector:
    app: vvveb-cms
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 80
      nodePort: 30220
  type: NodePort
===== file.txt =====

===== frontend-deployment.yaml =====
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chat-frontend
  template:
    metadata:
      labels:
        app: chat-frontend
    spec:
      containers:
      - name: chat-frontend
        image: tanase0/frontend-chat-std:latest
        ports:
        - containerPort: 90
          hostPort: 90
        env:
        - name: VUE_APP_WS_ENDPOINT
          value: "/chat"  # Nota: Codul frontend trebuie sÄƒ construiascÄƒ ws://<host>:88/chat
===== frontend-service.yaml =====
apiVersion: v1
kind: Service
metadata:
  name: chat-frontend-service
spec:
  ports:
  - port: 90
    targetPort: 90
  selector:
    app: chat-frontend
  type: ClusterIP

===== ingress.yaml =====
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chat-and-cms-ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /chat
        pathType: Prefix
        backend:
          service:
            name: chat-frontend-service
            port:
              number: 90

      - path: /ai
        pathType: Prefix
        backend:
          service:
            name: ai-frontend-service
            port:
              number: 70

      - path: /
        pathType: Prefix
        backend:
          service:
            name: vvveb-service
            port:
              number: 8080

===== mongodb-deployment.yaml =====
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        ports:
        - containerPort: 27017
===== mongodb-service.yaml =====
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongodb
  type: ClusterIP

